version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: fcg_ms_game_library:latest
    container_name: gameplatform_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Port=5432;Database=gameplatform;Username=gameuser;Password=gamepassword;
      - Elastic__Uri=http://elasticsearch:9200   # nome consistente para .NET
    ports:
      - "3001:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - gameplatform_network
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: gameplatform_postgres_v2
    environment:
      POSTGRES_USER: gameuser
      POSTGRES_PASSWORD: gamepassword
      POSTGRES_DB: gameplatform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/DockerForPostgree/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gameuser -d gameplatform"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - gameplatform_network
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - node.name=es-node
      - cluster.name=es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - gameplatform_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 5s
      retries: 20
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      xpack.security.enabled: false
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - gameplatform_network
    restart: unless-stopped

networks:
  gameplatform_network:
    name: gameplatform_network

volumes:
  postgres_data:
  es_data:
